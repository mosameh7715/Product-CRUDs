{"ast":null,"code":"export class AuthIntercetorService {\n  intercept(req, next) {\n    const token = localStorage.getItem('userToken');\n    const modifiedRequest = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return next.handle(modifiedRequest);\n  }\n}","map":{"version":3,"mappings":"AAMA,OAAM,MAAOA,qBAAqB;EAChCC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,MAAMC,eAAe,GAAGL,GAAG,CAACM,KAAK,CAAC;MAChCC,UAAU,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAE;KAC/C,CAAC;IAEF,OAAOD,IAAI,CAACQ,MAAM,CAACJ,eAAe,CAAC;EACrC","names":["AuthIntercetorService","intercept","req","next","token","localStorage","getItem","modifiedRequest","clone","setHeaders","Authorization","handle"],"sourceRoot":"","sources":["G:\\Courses\\Programming\\Ahmed Turky Demos\\Basic CRUDs Opearations (CQRS, Mediator, Repository, Unit of Work)\\Frontend\\Products App\\src\\app\\services\\auth-intercetor.service.ts"],"sourcesContent":["import {\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\n\nexport class AuthIntercetorService implements HttpInterceptor {\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    const token = localStorage.getItem('userToken');\n    const modifiedRequest = req.clone({\n      setHeaders: { Authorization: `Bearer ${token}` },\n    });\n\n    return next.handle(modifiedRequest);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}