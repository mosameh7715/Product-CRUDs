{"ast":null,"code":"import { environment } from 'src/environments/environment.development';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(http) {\n    this.http = http;\n    this.url = environment.apiDomain;\n    this.isLoggedIn = new Subject();\n    this.loggedIn = new BehaviorSubject(false);\n    this.hasPermission = false;\n    this.loggedIn.subscribe({\n      next: res => {\n        this.hasPermission = res;\n      }\n    });\n  }\n  login(loginData) {\n    return this.http.post(this.url + '/api/v1/UsersAuth/login', loginData);\n  }\n  getLoggedInUser() {\n    return this.http.get(this.url + '/api/v1/UsersAuth/GetLoggedInUser');\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,0CAA0C;AACtE,SAASC,eAAe,EAAEC,OAAO,QAAoB,MAAM;;;AAK3D,OAAM,MAAOC,YAAY;EAKvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJhB,QAAG,GAAWL,WAAW,CAACM,SAAS;IAC3C,eAAU,GAAG,IAAIJ,OAAO,EAAW;IACnC,aAAQ,GAAG,IAAID,eAAe,CAAU,KAAK,CAAC;IAC9C,kBAAa,GAAY,KAAK;IAE5B,IAAI,CAACM,QAAQ,CAACC,SAAS,CAAC;MACtBC,IAAI,EAAGC,GAAY,IAAI;QACrB,IAAI,CAACC,aAAa,GAAGD,GAAG;MAC1B;KACD,CAAC;EACJ;EAEAE,KAAK,CAACC,SAAgB;IACpB,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAC,IAAI,CAACC,GAAG,GAAG,yBAAyB,EAAEF,SAAS,CAAC;EACxE;EAEAG,eAAe;IACb,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAC,IAAI,CAACF,GAAG,GAAG,mCAAmC,CAAC;EACtE;EAAC;qBAnBUZ,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAe,SAAZf,YAAY;IAAAgB,YAFX;EAAM","names":["environment","BehaviorSubject","Subject","LoginService","constructor","http","apiDomain","loggedIn","subscribe","next","res","hasPermission","login","loginData","post","url","getLoggedInUser","get","factory","providedIn"],"sourceRoot":"","sources":["G:\\Courses\\Programming\\Ahmed Turky Demos\\Basic CRUDs Opearations (CQRS, Mediator, Repository, Unit of Work)\\Frontend\\Products App\\src\\app\\services\\login.service.ts"],"sourcesContent":["import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Login } from '../models/login';\nimport { environment } from 'src/environments/environment.development';\nimport { BehaviorSubject, Subject, catchError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private url: string = environment.apiDomain;\n  isLoggedIn = new Subject<boolean>();\n  loggedIn = new BehaviorSubject<boolean>(false);\n  hasPermission: boolean = false;\n  constructor(private http: HttpClient) {\n    this.loggedIn.subscribe({\n      next: (res: boolean) => {\n        this.hasPermission = res;\n      },\n    });\n  }\n\n  login(loginData: Login) {\n    return this.http.post(this.url + '/api/v1/UsersAuth/login', loginData);\n  }\n\n  getLoggedInUser() {\n    return this.http.get(this.url + '/api/v1/UsersAuth/GetLoggedInUser');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}