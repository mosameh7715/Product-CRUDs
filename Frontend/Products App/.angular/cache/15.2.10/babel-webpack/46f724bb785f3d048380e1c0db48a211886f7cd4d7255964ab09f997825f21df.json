{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ItemsComponent = class ItemsComponent {\n  constructor(itemService, route, router, loginService, authorizeService) {\n    this.itemService = itemService;\n    this.route = route;\n    this.router = router;\n    this.loginService = loginService;\n    this.authorizeService = authorizeService;\n    this.items = [];\n    this.totalCount = 9;\n    this.currentPage = 1;\n    this.search = '';\n    this.hasPermission = false;\n  }\n  ngOnInit() {\n    this.hasPermission = this.loginService.hasPermission;\n    this.getAll();\n    this.itemService.refresh.subscribe({\n      next: () => {\n        this.getAll();\n      }\n    });\n  }\n  ChangeCurrentPage(page) {\n    this.currentPage = +page;\n    this.getAll();\n  }\n  onSearch(searchContent) {\n    this.search = searchContent;\n    this.currentPage = 1;\n    this.getAll();\n  }\n  getAll() {\n    this.itemService.getAllItems(this.currentPage, this.search).subscribe({\n      next: response => {\n        this.items = response.result.resultSet;\n        this.totalCount = Math.max(response.result.count, 9);\n        console.log(response);\n        console.log(this.items);\n      }\n    });\n  }\n  // onGetSingleItem(id: number) {\n  //   this.route.navigate([`${id}`], { relativeTo: this.router });\n  // }\n  onCreateItem() {\n    this.route.navigate(['create/new'], {\n      relativeTo: this.router\n    });\n  }\n};\nItemsComponent = __decorate([Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css']\n})], ItemsComponent);\nexport { ItemsComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAY1C,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAOzBC,YACUC,WAAwB,EACxBC,KAAa,EACbC,MAAsB,EACtBC,YAA0B,EAC1BC,gBAAkC;IAJlC,gBAAW,GAAXJ,WAAW;IACX,UAAK,GAALC,KAAK;IACL,WAAM,GAANC,MAAM;IACN,iBAAY,GAAZC,YAAY;IACZ,qBAAgB,GAAhBC,gBAAgB;IAX1B,UAAK,GAAc,EAAE;IACrB,eAAU,GAAW,CAAC;IACtB,gBAAW,GAAW,CAAC;IACvB,WAAM,GAAW,EAAE;IACnB,kBAAa,GAAY,KAAK;EAQ3B;EAEHC,QAAQ;IACN,IAAI,CAACC,aAAa,GAAG,IAAI,CAACH,YAAY,CAACG,aAAa;IACpD,IAAI,CAACC,MAAM,EAAE;IACb,IAAI,CAACP,WAAW,CAACQ,OAAO,CAACC,SAAS,CAAC;MACjCC,IAAI,EAAE,MAAK;QACT,IAAI,CAACH,MAAM,EAAE;MACf;KACD,CAAC;EACJ;EAEAI,iBAAiB,CAACC,IAAW;IAC3B,IAAI,CAACC,WAAW,GAAG,CAACD,IAAI;IACxB,IAAI,CAACL,MAAM,EAAE;EACf;EAEAO,QAAQ,CAACC,aAAqB;IAC5B,IAAI,CAACC,MAAM,GAAGD,aAAa;IAC3B,IAAI,CAACF,WAAW,GAAG,CAAC;IACpB,IAAI,CAACN,MAAM,EAAE;EACf;EAEAA,MAAM;IACJ,IAAI,CAACP,WAAW,CAACiB,WAAW,CAAC,IAAI,CAACJ,WAAW,EAAE,IAAI,CAACG,MAAM,CAAC,CAACP,SAAS,CAAC;MACpEC,IAAI,EAAGQ,QAAgB,IAAI;QACzB,IAAI,CAACC,KAAK,GAAGD,QAAQ,CAACE,MAAM,CAACC,SAAsB;QACnD,IAAI,CAACC,UAAU,GAAGC,IAAI,CAACC,GAAG,CAACN,QAAQ,CAACE,MAAM,CAACK,KAAK,EAAE,CAAC,CAAC;QACpDC,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC;QACrBQ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,KAAK,CAAC;MACzB;KACD,CAAC;EACJ;EAEA;EACA;EACA;EACAS,YAAY;IACV,IAAI,CAAC3B,KAAK,CAAC4B,QAAQ,CAAC,CAAC,YAAY,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI,CAAC5B;IAAM,CAAE,CAAC;EAClE;CACD;AArDYJ,cAAc,eAL1BD,SAAS,CAAC;EACTkC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,GACWnC,cAAc,CAqD1B;SArDYA,cAAc","names":["Component","ItemsComponent","constructor","itemService","route","router","loginService","authorizeService","ngOnInit","hasPermission","getAll","refresh","subscribe","next","ChangeCurrentPage","page","currentPage","onSearch","searchContent","search","getAllItems","response","items","result","resultSet","totalCount","Math","max","count","console","log","onCreateItem","navigate","relativeTo","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["G:\\Courses\\Programming\\Ahmed Turky Demos\\Basic CRUDs Opearations (CQRS, Mediator, Repository, Unit of Work)\\Frontend\\Products App\\src\\app\\items\\items.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ItemService } from '../services/item.service';\nimport { Product } from '../models/Product';\nimport { Result } from '../interfaces/result.interface';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginService } from '../services/login.service';\n\n@Component({\n  selector: 'app-items',\n  templateUrl: './items.component.html',\n  styleUrls: ['./items.component.css'],\n})\nexport class ItemsComponent implements OnInit {\n  items: Product[] = [];\n  totalCount: number = 9;\n  currentPage: number = 1;\n  search: string = '';\n  hasPermission: boolean = false;\n\n  constructor(\n    private itemService: ItemService,\n    private route: Router,\n    private router: ActivatedRoute,\n    private loginService: LoginService,\n    private authorizeService: AuthorizeService\n  ) {}\n\n  ngOnInit() {\n    this.hasPermission = this.loginService.hasPermission;\n    this.getAll();\n    this.itemService.refresh.subscribe({\n      next: () => {\n        this.getAll();\n      },\n    });\n  }\n\n  ChangeCurrentPage(page: Event) {\n    this.currentPage = +page;\n    this.getAll();\n  }\n\n  onSearch(searchContent: string) {\n    this.search = searchContent;\n    this.currentPage = 1;\n    this.getAll();\n  }\n\n  getAll() {\n    this.itemService.getAllItems(this.currentPage, this.search).subscribe({\n      next: (response: Result) => {\n        this.items = response.result.resultSet as Product[];\n        this.totalCount = Math.max(response.result.count, 9);\n        console.log(response);\n        console.log(this.items);\n      },\n    });\n  }\n\n  // onGetSingleItem(id: number) {\n  //   this.route.navigate([`${id}`], { relativeTo: this.router });\n  // }\n  onCreateItem() {\n    this.route.navigate(['create/new'], { relativeTo: this.router });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}