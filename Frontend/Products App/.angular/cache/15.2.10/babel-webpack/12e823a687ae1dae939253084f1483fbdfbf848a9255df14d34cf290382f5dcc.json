{"ast":null,"code":"import { Injectable } from '@angular/core';\nimport Swal from 'sweetalert2';\nInjectable({\n  providedIn: 'root'\n});\nexport class SweatAlert {\n  tinyAlert() {\n    Swal.fire('Hey there!');\n  }\n  successNotification(isUpdateMode) {\n    if (isUpdateMode) {\n      Swal.fire('UPDATED!', 'ITEM UPDATED SUCCESSFULLY', 'success');\n    } else {}\n  }\n  alertConfirmation() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'This process will be canceled!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, go ahead.',\n      cancelButtonText: 'No, let me think'\n    }).then(result => {\n      if (result.value) {\n        Swal.fire('Removed!', 'Product removed successfully.', 'success');\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire('Cancelled', 'Product still in our database.)', 'error');\n      }\n    });\n  }\n  alertSkipEdit() {\n    return new Promise(resolve => {\n      Swal.fire({\n        title: 'Are You Sure?',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'Cancel'\n      }).then(result => {\n        if (result.value) {\n          resolve(true);\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          resolve(false);\n        }\n      });\n    });\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,UAAU,QAAQ,eAAe;AAC1C,OAAOC,IAAI,MAAM,aAAa;AAE9BD,UAAU,CAAC;EAAEE,UAAU,EAAE;AAAM,CAAE,CAAC;AAClC,OAAM,MAAOC,UAAU;EACrBC,SAAS;IACPH,IAAI,CAACI,IAAI,CAAC,YAAY,CAAC;EACzB;EAEAC,mBAAmB,CAACC,YAAqB;IACvC,IAAIA,YAAY,EAAE;MAChBN,IAAI,CAACI,IAAI,CAAC,UAAU,EAAE,2BAA2B,EAAE,SAAS,CAAC;KAC9D,MAAM;EAET;EAEAG,iBAAiB;IACfP,IAAI,CAACI,IAAI,CAAC;MACRI,KAAK,EAAE,eAAe;MACtBC,IAAI,EAAE,gCAAgC;MACtCC,IAAI,EAAE,SAAS;MACfC,gBAAgB,EAAE,IAAI;MACtBC,iBAAiB,EAAE,gBAAgB;MACnCC,gBAAgB,EAAE;KACnB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB,IAAIA,MAAM,CAACC,KAAK,EAAE;QAChBhB,IAAI,CAACI,IAAI,CAAC,UAAU,EAAE,+BAA+B,EAAE,SAAS,CAAC;OAClE,MAAM,IAAIW,MAAM,CAACE,OAAO,KAAKjB,IAAI,CAACkB,aAAa,CAACC,MAAM,EAAE;QACvDnB,IAAI,CAACI,IAAI,CAAC,WAAW,EAAE,iCAAiC,EAAE,OAAO,CAAC;;IAEtE,CAAC,CAAC;EACJ;EAEAgB,aAAa;IACX,OAAO,IAAIC,OAAO,CAAWC,OAAO,IAAI;MACtCtB,IAAI,CAACI,IAAI,CAAC;QACRI,KAAK,EAAE,eAAe;QACtBE,IAAI,EAAE,SAAS;QACfC,gBAAgB,EAAE,IAAI;QACtBC,iBAAiB,EAAE,KAAK;QACxBC,gBAAgB,EAAE;OACnB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;QACjB,IAAIA,MAAM,CAACC,KAAK,EAAE;UAChBM,OAAO,CAAC,IAAI,CAAC;SACd,MAAM,IAAIP,MAAM,CAACE,OAAO,KAAKjB,IAAI,CAACkB,aAAa,CAACC,MAAM,EAAE;UACvDG,OAAO,CAAC,KAAK,CAAC;;MAElB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ","names":["Injectable","Swal","providedIn","SweatAlert","tinyAlert","fire","successNotification","isUpdateMode","alertConfirmation","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","value","dismiss","DismissReason","cancel","alertSkipEdit","Promise","resolve"],"sourceRoot":"","sources":["G:\\Courses\\Programming\\Ahmed Turky Demos\\Basic CRUDs Opearations (CQRS, Mediator, Repository, Unit of Work)\\Frontend\\Products App\\src\\app\\services\\sweat-alert.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport Swal from 'sweetalert2';\n\nInjectable({ providedIn: 'root' });\nexport class SweatAlert {\n  tinyAlert() {\n    Swal.fire('Hey there!');\n  }\n\n  successNotification(isUpdateMode: boolean) {\n    if (isUpdateMode) {\n      Swal.fire('UPDATED!', 'ITEM UPDATED SUCCESSFULLY', 'success');\n    } else {\n    }\n  }\n\n  alertConfirmation() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'This process will be canceled!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, go ahead.',\n      cancelButtonText: 'No, let me think',\n    }).then((result) => {\n      if (result.value) {\n        Swal.fire('Removed!', 'Product removed successfully.', 'success');\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire('Cancelled', 'Product still in our database.)', 'error');\n      }\n    });\n  }\n\n  alertSkipEdit(): Promise<boolean> {\n    return new Promise<boolean>((resolve) => {\n      Swal.fire({\n        title: 'Are You Sure?',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Yes',\n        cancelButtonText: 'Cancel',\n      }).then((result) => {\n        if (result.value) {\n          resolve(true);\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n          resolve(false);\n        }\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}