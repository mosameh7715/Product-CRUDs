{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./authorize.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuardService {\n  constructor(authService, route) {\n    this.authService = authService;\n    this.route = route;\n  }\n  canActivate(route, state) {\n    console.log(this.authService.validateToken());\n    return this.authService.validateToken();\n  }\n  static #_ = this.ɵfac = function AuthGuardService_Factory(t) {\n    return new (t || AuthGuardService)(i0.ɵɵinject(i1.AuthorizeService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuardService,\n    factory: AuthGuardService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;;AAaA,OAAM,MAAOA,gBAAgB;EAC3BC,YAAoBC,WAA6B,EAAUC,KAAa;IAApD,gBAAW,GAAXD,WAAW;IAA4B,UAAK,GAALC,KAAK;EAAW;EAE3EC,WAAW,CACTD,KAA6B,EAC7BE,KAA0B;IAE1BC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,WAAW,CAACM,aAAa,EAAE,CAAC;IAC7C,OAAO,IAAI,CAACN,WAAW,CAACM,aAAa,EAAE;EACzC;EAAC;qBATUR,gBAAgB;EAAA;EAAA;WAAhBA,gBAAgB;IAAAS,SAAhBT,gBAAgB;IAAAU,YADH;EAAM","names":["AuthGuardService","constructor","authService","route","canActivate","state","console","log","validateToken","factory","providedIn"],"sourceRoot":"","sources":["G:\\Courses\\Programming\\Ahmed Turky Demos\\Basic CRUDs Opearations (CQRS, Mediator, Repository, Unit of Work)\\Frontend\\Products App\\src\\app\\services\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthorizeService } from './authorize.service';\nimport { LoginService } from './login.service';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuardService implements CanActivate {\n  constructor(private authService: AuthorizeService, private route: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    console.log(this.authService.validateToken());\n    return this.authService.validateToken();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}