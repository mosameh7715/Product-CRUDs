{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Product } from 'src/app/models/Product';\nimport { SweatAlert } from 'src/app/services/sweat-alert.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/item.service\";\nimport * as i3 from \"src/app/services/category.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction CreateItemComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 28);\n    i0.ɵɵtext(1, \" CREATE ITEM \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateItemComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 28);\n    i0.ɵɵtext(1, \" UPDATE ITEM \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateItemComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Enter a valid Name!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateItemComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Enter a valid Price!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateItemComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Enter a valid Image!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateItemComponent_span_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Enter a valid Quantity!\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateItemComponent_option_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const cat_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", cat_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", cat_r8.name, \" \");\n  }\n}\nfunction CreateItemComponent_span_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵtext(1, \"Enter a valid Category!\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-valid\": a0,\n    \"is-invalid\": a1\n  };\n};\nexport class CreateItemComponent {\n  constructor(router, itemService, categoryService, route) {\n    this.router = router;\n    this.itemService = itemService;\n    this.categoryService = categoryService;\n    this.route = route;\n    this.item = new Product(0, '', 0, '', '', '../../../assets/images/item1.jpg', 0);\n    this.isUpdateMode = false;\n    this.isChangesSaved = false;\n    this.sweatAlertService = new SweatAlert();\n    this.router.params.subscribe(params => {\n      //CHECK IF THE ID HAS RIGHT ID\n      if (!isNaN(params['id'])) {\n        this.isUpdateMode = true;\n        this.item.id = params['id'];\n        this.itemService.GetItem(this.item.id).subscribe({\n          next: result => {\n            this.item = result.result;\n            console.log(result);\n          },\n          error: error => {\n            this.route.navigate(['/notfound'], {\n              relativeTo: this.router\n            });\n          }\n        });\n      }\n    });\n  }\n  ngOnInit() {\n    this.createItem = new FormGroup({\n      name: new FormControl(null, [Validators.required]),\n      price: new FormControl(null, [Validators.required]),\n      description: new FormControl(null),\n      image: new FormControl(null),\n      brand: new FormControl(null),\n      quantity: new FormControl(null, [Validators.required]),\n      category: new FormControl(null, [Validators.required, Validators.min(0)])\n    });\n  }\n  onSubmit() {\n    if (!this.isUpdateMode) {\n      this.itemService.PostFormData(this.item).subscribe({\n        next: response => {\n          this.isChangesSaved = true;\n          this.sweatAlertService.successNotification();\n          this.route.navigate(['/items'], {\n            relativeTo: this.router\n          });\n        },\n        error: err => {\n          if (err.error.ErrorMessages[0] === 'Category Not Exists!') {\n            alert('please select category!');\n            console.clear();\n          }\n        }\n      });\n    } else {\n      this.itemService.PutFormData(this.item).subscribe({\n        next: response => {\n          this.isChangesSaved = true;\n          this.sweatAlertService.successNotification();\n          this.route.navigate(['/items'], {\n            relativeTo: this.router\n          });\n        },\n        error: err => {\n          if (err.error.ErrorMessages[0] === 'Category Not Exists!') {\n            alert('please select category!');\n            console.clear();\n          }\n        }\n      });\n    }\n  }\n  backToItems() {\n    this.route.navigate(['/items'], {\n      relativeTo: this.router\n    });\n  }\n  canDeactivate() {\n    return new Promise(resolve => {\n      if (!this.createItem.valid || !this.isChangesSaved) {\n        this.sweatAlertService.alertSkipEdit().then(isConfirmed => {\n          resolve(isConfirmed);\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n  static #_ = this.ɵfac = function CreateItemComponent_Factory(t) {\n    return new (t || CreateItemComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ItemService), i0.ɵɵdirectiveInject(i3.CategoryService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateItemComponent,\n    selectors: [[\"app-create-item\"]],\n    decls: 62,\n    vars: 45,\n    consts: [[\"enctype\", \"multipart/form-data\", \"novalidate\", \"\", 1, \"needs-validation\", \"mt-5\", \"mb-5\", 3, \"formGroup\", \"ngSubmit\"], [1, \"container\", \"bg-light\", \"col-md-9\", \"col-11\", \"p-3\", 2, \"border-radius\", \"10px\"], [\"class\", \"bg-light\", \"style\", \"font-size: 2rem; font-weight: bold; color: #104c74\", 4, \"ngIf\"], [1, \"row\"], [\"type\", \"hidden\", \"name\", \"search\", \"value\", \"@search\"], [\"type\", \"hidden\", \"name\", \"pageNumber\", \"value\", \"@pageNumber\"], [1, \"col-2\"], [1, \"form-label\", \"pt-2\", 2, \"font-size\", \"20px\"], [1, \"col-10\", \"pb-3\"], [\"formControlName\", \"name\", \"placeholder\", \"Enter item name..\", 1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"col-3\"], [\"formControlName\", \"price\", \"type\", \"number\", \"placeholder\", \"Add price..\", 1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [1, \"control-label\", \"pt-2\", 2, \"font-size\", \"20px\"], [\"formControlName\", \"description\", \"rows\", \"5\", \"placeholder\", \"Enter description..\", 1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [1, \"text-danger\"], [\"formControlName\", \"image\", \"type\", \"file\", \"id\", \"formFile\", \"pattern\", \".*\\\\.(jpg|jpeg|png|img)$\", \"placeholder\", \"Choose item image..\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"brand\", \"placeholder\", \"Enter item brand..\", 1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"quantity\", \"type\", \"number\", \"placeholder\", \"Add quantity..\", 1, \"form-control\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\"], [1, \"col-2\", \"mb-5\"], [1, \"col-4\", \"mb-5\"], [\"formControlName\", \"category\", \"aria-label\", \"Select Category\", 1, \"form-select\", 3, \"ngClass\", \"ngModel\", \"ngModelChange\", \"change\"], [\"disabled\", \"\", 3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", \"d-flex\", \"justify-content-around\"], [1, \"col-5\"], [1, \"btn-primary\", \"btn\", \"form-control\", 3, \"click\"], [\"type\", \"submit\", \"id\", \"submit\", \"value\", \"Confirm\", 1, \"btn\", \"btn-success\", \"form-control\", 3, \"disabled\"], [1, \"bg-light\", 2, \"font-size\", \"2rem\", \"font-weight\", \"bold\", \"color\", \"#104c74\"], [3, \"value\"]],\n    template: function CreateItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateItemComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelement(1, \"br\");\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵtemplate(3, CreateItemComponent_p_3_Template, 2, 0, \"p\", 2);\n        i0.ɵɵtemplate(4, CreateItemComponent_p_4_Template, 2, 0, \"p\", 2);\n        i0.ɵɵelement(5, \"hr\");\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵelement(7, \"input\", 4)(8, \"input\", 5);\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"label\", 7);\n        i0.ɵɵtext(11, \"Name:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 8)(13, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateItemComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.item.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, CreateItemComponent_span_14_Template, 2, 0, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 7);\n        i0.ɵɵtext(17, \"Price:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 8)(19, \"div\", 11)(20, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateItemComponent_Template_input_ngModelChange_20_listener($event) {\n          return ctx.item.price = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, CreateItemComponent_span_21_Template, 2, 0, \"span\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 6)(23, \"label\", 13);\n        i0.ɵɵtext(24, \"Description:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"div\", 8)(26, \"textarea\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateItemComponent_Template_textarea_ngModelChange_26_listener($event) {\n          return ctx.item.description = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"span\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 6)(29, \"label\", 13);\n        i0.ɵɵtext(30, \"Image:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(31, \"div\", 8);\n        i0.ɵɵelement(32, \"input\", 16);\n        i0.ɵɵtemplate(33, CreateItemComponent_span_33_Template, 2, 0, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"div\", 6)(35, \"label\", 13);\n        i0.ɵɵtext(36, \"Brand:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"div\", 8)(38, \"input\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateItemComponent_Template_input_ngModelChange_38_listener($event) {\n          return ctx.item.brandName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"span\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 6)(41, \"label\", 13);\n        i0.ɵɵtext(42, \"Quantity:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(43, \"div\", 8)(44, \"div\", 11)(45, \"input\", 18);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateItemComponent_Template_input_ngModelChange_45_listener($event) {\n          return ctx.item.quantity = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(46, CreateItemComponent_span_46_Template, 2, 0, \"span\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(47, \"div\", 19)(48, \"label\", 13);\n        i0.ɵɵtext(49, \"Category:\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(50, \"div\", 20)(51, \"select\", 21);\n        i0.ɵɵlistener(\"ngModelChange\", function CreateItemComponent_Template_select_ngModelChange_51_listener($event) {\n          return ctx.item.categoryId = $event;\n        })(\"change\", function CreateItemComponent_Template_select_change_51_listener($event) {\n          return ctx.updateCategoryId($event.target.value);\n        });\n        i0.ɵɵelementStart(52, \"option\", 22);\n        i0.ɵɵtext(53, \"Select a Category\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(54, CreateItemComponent_option_54_Template, 2, 2, \"option\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(55, CreateItemComponent_span_55_Template, 2, 0, \"span\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 24)(57, \"div\", 25)(58, \"a\", 26);\n        i0.ɵɵlistener(\"click\", function CreateItemComponent_Template_a_click_58_listener() {\n          return ctx.backToItems();\n        });\n        i0.ɵɵtext(59, \"Back to Items\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(60, \"div\", 25);\n        i0.ɵɵelement(61, \"input\", 27);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.createItem);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isUpdateMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isUpdateMode);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(24, _c0, ctx.createItem.get(\"name\").valid && (ctx.createItem.get(\"name\").dirty || ctx.createItem.get(\"name\").touched || ctx.isUpdateMode), ctx.createItem.get(\"name\").invalid && (ctx.createItem.get(\"name\").dirty || ctx.createItem.get(\"name\").touched || ctx.isUpdateMode)))(\"ngModel\", ctx.item.name);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.createItem.get(\"name\").valid && ctx.createItem.get(\"name\").touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(27, _c0, ctx.createItem.get(\"price\").valid && (ctx.createItem.get(\"price\").dirty || ctx.createItem.get(\"price\").touched || ctx.isUpdateMode), ctx.createItem.get(\"price\").invalid && (ctx.createItem.get(\"price\").dirty || ctx.createItem.get(\"price\").touched || ctx.isUpdateMode)))(\"ngModel\", ctx.item.price);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.createItem.get(\"price\").valid && ctx.createItem.get(\"price\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(30, _c0, ctx.createItem.get(\"description\").valid && (ctx.createItem.get(\"description\").dirty || ctx.createItem.get(\"description\").touched || ctx.isUpdateMode), ctx.createItem.get(\"description\").invalid && (ctx.createItem.get(\"description\").dirty || ctx.createItem.get(\"description\").touched || ctx.isUpdateMode)))(\"ngModel\", ctx.item.description);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(33, _c0, ctx.createItem.get(\"image\").valid && (ctx.createItem.get(\"image\").dirty || ctx.createItem.get(\"image\").touched || ctx.isUpdateMode), ctx.createItem.get(\"image\").invalid && (ctx.createItem.get(\"image\").dirty || ctx.createItem.get(\"image\").touched || ctx.isUpdateMode)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.createItem.get(\"image\").valid && ctx.createItem.get(\"image\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(36, _c0, ctx.createItem.get(\"brand\").valid && (ctx.createItem.get(\"brand\").dirty || ctx.createItem.get(\"brand\").touched || ctx.isUpdateMode), ctx.createItem.get(\"brand\").invalid && (ctx.createItem.get(\"brand\").dirty || ctx.createItem.get(\"brand\").touched || ctx.isUpdateMode)))(\"ngModel\", ctx.item.brandName);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(39, _c0, ctx.createItem.get(\"quantity\").valid && (ctx.createItem.get(\"quantity\").dirty || ctx.createItem.get(\"quantity\").touched || ctx.isUpdateMode), ctx.createItem.get(\"quantity\").invalid && (ctx.createItem.get(\"quantity\").dirty || ctx.createItem.get(\"quantity\").touched || ctx.isUpdateMode)))(\"ngModel\", ctx.item.quantity);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.createItem.get(\"quantity\").valid && ctx.createItem.get(\"quantity\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(42, _c0, ctx.createItem.get(\"category\").valid, ctx.createItem.get(\"category\").invalid))(\"ngModel\", ctx.item.categoryId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"value\", 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.categories);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.createItem.get(\"category\").valid && ctx.createItem.get(\"category\").touched);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", !ctx.createItem.valid);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i4.NgIf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.PatternValidator, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AAMnE,SAASC,OAAO,QAAQ,wBAAwB;AAGhD,SAASC,UAAU,QAAQ,sCAAsC;;;;;;;;;ICC7DC,6BAIC;IACCA,6BACF;IAAAA,iBAAI;;;;;IACJA,6BAIC;IACCA,6BACF;IAAAA,iBAAI;;;;;IA6BAA,gCAKG;IAAAA,mCAAmB;IAAAA,iBACrB;;;;;IA2BCA,gCAKG;IAAAA,oCAAoB;IAAAA,iBACtB;;;;;IAwDHA,gCAKG;IAAAA,oCAAoB;IAAAA,iBACtB;;;;;IAsDCA,gCAMG;IAAAA,uCAAuB;IAAAA,iBACzB;;;;;IAsBDA,kCAAwD;IACtDA,YACF;IAAAA,iBAAS;;;;IAF8BA,iCAAgB;IACrDA,eACF;IADEA,4CACF;;;;;IAEFA,gCAMG;IAAAA,uCAAuB;IAAAA,iBACzB;;;;;;;;;ADvOT,OAAM,MAAOC,mBAAmB;EAgB9BC,YACUC,MAAsB,EACtBC,WAAwB,EACxBC,eAAgC,EAChCC,KAAa;IAHb,WAAM,GAANH,MAAM;IACN,gBAAW,GAAXC,WAAW;IACX,oBAAe,GAAfC,eAAe;IACf,UAAK,GAALC,KAAK;IAlBf,SAAI,GAAY,IAAIR,OAAO,CACzB,CAAC,EACD,EAAE,EACF,CAAC,EACD,EAAE,EACF,EAAE,EACF,kCAAkC,EAClC,CAAC,CACF;IAED,iBAAY,GAAY,KAAK;IAC7B,mBAAc,GAAY,KAAK;IAC/B,sBAAiB,GAAe,IAAIC,UAAU,EAAE;IAQ9C,IAAI,CAACI,MAAM,CAACI,MAAM,CAACC,SAAS,CAAED,MAAc,IAAI;MAC9C;MACA,IAAI,CAACE,KAAK,CAACF,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE;QACxB,IAAI,CAACG,YAAY,GAAG,IAAI;QACxB,IAAI,CAACC,IAAI,CAACC,EAAE,GAAGL,MAAM,CAAC,IAAI,CAAC;QAC3B,IAAI,CAACH,WAAW,CAACS,OAAO,CAAC,IAAI,CAACF,IAAI,CAACC,EAAE,CAAC,CAACJ,SAAS,CAAC;UAC/CM,IAAI,EAAGC,MAAoB,IAAI;YAC7B,IAAI,CAACJ,IAAI,GAAYI,MAAM,CAACA,MAAM;YAClCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;UACrB,CAAC;UACDG,KAAK,EAAGA,KAAK,IAAI;YACf,IAAI,CAACZ,KAAK,CAACa,QAAQ,CAAC,CAAC,WAAW,CAAC,EAAE;cAAEC,UAAU,EAAE,IAAI,CAACjB;YAAM,CAAE,CAAC;UACjE;SACD,CAAC;;IAEN,CAAC,CAAC;EACJ;EACAkB,QAAQ;IACN,IAAI,CAACC,UAAU,GAAG,IAAI1B,SAAS,CAAC;MAC9B2B,IAAI,EAAE,IAAI5B,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAAC2B,QAAQ,CAAC,CAAC;MAClDC,KAAK,EAAE,IAAI9B,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAAC2B,QAAQ,CAAC,CAAC;MACnDE,WAAW,EAAE,IAAI/B,WAAW,CAAC,IAAI,CAAC;MAClCgC,KAAK,EAAE,IAAIhC,WAAW,CAAC,IAAI,CAAC;MAC5BiC,KAAK,EAAE,IAAIjC,WAAW,CAAC,IAAI,CAAC;MAC5BkC,QAAQ,EAAE,IAAIlC,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAAC2B,QAAQ,CAAC,CAAC;MACtDM,QAAQ,EAAE,IAAInC,WAAW,CAAC,IAAI,EAAE,CAACE,UAAU,CAAC2B,QAAQ,EAAE3B,UAAU,CAACkC,GAAG,CAAC,CAAC,CAAC,CAAC;KACzE,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAAC,IAAI,CAACtB,YAAY,EAAE;MACtB,IAAI,CAACN,WAAW,CAAC6B,YAAY,CAAC,IAAI,CAACtB,IAAI,CAAC,CAACH,SAAS,CAAC;QACjDM,IAAI,EAAGoB,QAAQ,IAAI;UACjB,IAAI,CAACC,cAAc,GAAG,IAAI;UAC1B,IAAI,CAACC,iBAAiB,CAACC,mBAAmB,EAAE;UAC5C,IAAI,CAAC/B,KAAK,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;YAAEC,UAAU,EAAE,IAAI,CAACjB;UAAM,CAAE,CAAC;QAC9D,CAAC;QACDe,KAAK,EAAGoB,GAAG,IAAI;UACb,IAAIA,GAAG,CAACpB,KAAK,CAACqB,aAAa,CAAC,CAAC,CAAC,KAAK,sBAAsB,EAAE;YACzDC,KAAK,CAAC,yBAAyB,CAAC;YAChCxB,OAAO,CAACyB,KAAK,EAAE;;QAEnB;OACD,CAAC;KACH,MAAM;MACL,IAAI,CAACrC,WAAW,CAACsC,WAAW,CAAC,IAAI,CAAC/B,IAAI,CAAC,CAACH,SAAS,CAAC;QAChDM,IAAI,EAAGoB,QAAQ,IAAI;UACjB,IAAI,CAACC,cAAc,GAAG,IAAI;UAC1B,IAAI,CAACC,iBAAiB,CAACC,mBAAmB,EAAE;UAC5C,IAAI,CAAC/B,KAAK,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;YAAEC,UAAU,EAAE,IAAI,CAACjB;UAAM,CAAE,CAAC;QAC9D,CAAC;QACDe,KAAK,EAAGoB,GAAsB,IAAI;UAChC,IAAIA,GAAG,CAACpB,KAAK,CAACqB,aAAa,CAAC,CAAC,CAAC,KAAK,sBAAsB,EAAE;YACzDC,KAAK,CAAC,yBAAyB,CAAC;YAChCxB,OAAO,CAACyB,KAAK,EAAE;;QAEnB;OACD,CAAC;;EAEN;EAEAE,WAAW;IACT,IAAI,CAACrC,KAAK,CAACa,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;MAAEC,UAAU,EAAE,IAAI,CAACjB;IAAM,CAAE,CAAC;EAC9D;EAEAyC,aAAa;IACX,OAAO,IAAIC,OAAO,CAAWC,OAAO,IAAI;MACtC,IAAI,CAAC,IAAI,CAACxB,UAAU,CAACyB,KAAK,IAAI,CAAC,IAAI,CAACZ,cAAc,EAAE;QAClD,IAAI,CAACC,iBAAiB,CAACY,aAAa,EAAE,CAACC,IAAI,CAAEC,WAAW,IAAI;UAC1DJ,OAAO,CAACI,WAAW,CAAC;QACtB,CAAC,CAAC;OACH,MAAM;QACLJ,OAAO,CAAC,IAAI,CAAC;;IAEjB,CAAC,CAAC;EACJ;EAAC;qBAjGU7C,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAkD;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QClBhCvD,+BAMC;QADCA;UAAA,OAAYwD,cAAU;QAAA,EAAC;QAEvBxD,qBAAM;QACNA,8BAGC;QACCA,gEAMI;QACJA,gEAMI;QACJA,qBAAM;QAENA,8BAAiB;QACfA,2BAAqD;QAGrDA,8BAAmB;QACsCA,sBAAK;QAAAA,iBAAQ;QAEtEA,+BAAyB;QAgBrBA;UAAA;QAAA,EAAuB;QAfzBA,iBAiBE;QACFA,yEAMC;QACHA,iBAAM;QAENA,+BAAmB;QACsCA,uBAAM;QAAAA,iBAAQ;QAEvEA,+BAAyB;QAkBnBA;UAAA;QAAA,EAAwB;QAhB1BA,iBAkBE;QACFA,yEAMC;QACHA,iBAAM;QAGRA,+BAAmB;QAEdA,6BAAY;QAAAA,iBACd;QAEHA,+BAAyB;QAiBrBA;UAAA;QAAA,EAA8B;QAE/BA,iBAAW;QACZA,4BAAiC;QACnCA,iBAAM;QAENA,+BAAmB;QACyCA,uBAAM;QAAAA,iBAAQ;QAE1EA,+BAAyB;QACvBA,6BAmBE;QACFA,yEAMC;QACHA,iBAAM;QAENA,+BAAmB;QACyCA,uBAAM;QAAAA,iBAAQ;QAE1EA,+BAAyB;QAgBrBA;UAAA;QAAA,EAA4B;QAf9BA,iBAiBE;QACFA,4BAAiC;QACnCA,iBAAM;QAENA,+BAAmB;QAEdA,0BAAS;QAAAA,iBACX;QAEHA,+BAAyB;QAkBnBA;UAAA;QAAA,EAA2B;QAhB7BA,iBAkBE;QACFA,yEAOC;QACHA,iBAAM;QAGRA,gCAAwB;QAEnBA,0BAAS;QAAAA,iBACX;QAEHA,gCAAwB;QASpBA;UAAA;QAAA,EAA6B;UAAA,OACnBwD,yCAAqC;QAAA,EADlB;QAG7BxD,mCAA6B;QAAAA,kCAAiB;QAAAA,iBAAS;QACvDA,6EAES;QACXA,iBAAS;QACTA,yEAOC;QACHA,iBAAM;QAENA,gCAAkD;QAENA;UAAA,OAASwD,iBAAa;QAAA,EAAC;QAC5DxD,8BAAa;QAAAA,iBACf;QAEHA,gCAAmB;QACjBA,6BAME;QACJA,iBAAM;;;QAzQZA,0CAAwB;QAcnBA,eAAmB;QAAnBA,wCAAmB;QAOnBA,eAAkB;QAAlBA,uCAAkB;QAefA,eAWE;QAXFA,2TAWE;QAODA,eAGX;QAHWA,8FAGX;QAWYA,eAWE;QAXFA,iUAWE;QAQDA,eAGb;QAHaA,gGAGb;QAaUA,eAWE;QAXFA,qWAWE;QAeFA,eAWE;QAXFA,iUAWE;QASDA,eAGX;QAHWA,gGAGX;QAUUA,eAWE;QAXFA,iUAWE;QAiBAA,eAWE;QAXFA,mVAWE;QAQDA,eAIb;QAJaA,sGAIb;QAaUA,eAGE;QAHFA,mIAGE;QAOeA,eAAW;QAAXA,yBAAW;QACJA,eAAa;QAAbA,wCAAa;QAKpCA,eAIX;QAJWA,sGAIX;QAaYA,eAA8B;QAA9BA,gDAA8B","names":["FormControl","FormGroup","Validators","Product","SweatAlert","i0","CreateItemComponent","constructor","router","itemService","categoryService","route","params","subscribe","isNaN","isUpdateMode","item","id","GetItem","next","result","console","log","error","navigate","relativeTo","ngOnInit","createItem","name","required","price","description","image","brand","quantity","category","min","onSubmit","PostFormData","response","isChangesSaved","sweatAlertService","successNotification","err","ErrorMessages","alert","clear","PutFormData","backToItems","canDeactivate","Promise","resolve","valid","alertSkipEdit","then","isConfirmed","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["G:\\Courses\\Programming\\Ahmed Turky Demos\\Basic CRUDs Opearations (CQRS, Mediator, Repository, Unit of Work)\\Frontend\\Products App\\src\\app\\items\\create-item\\create-item.component.ts","G:\\Courses\\Programming\\Ahmed Turky Demos\\Basic CRUDs Opearations (CQRS, Mediator, Repository, Unit of Work)\\Frontend\\Products App\\src\\app\\items\\create-item\\create-item.component.html"],"sourcesContent":["import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Result } from 'src/app/interfaces/result.interface';\nimport { SingleResult } from 'src/app/interfaces/singleResult.interface';\nimport { Category } from 'src/app/models/category';\nimport { Product } from 'src/app/models/Product';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ItemService } from 'src/app/services/item.service';\nimport { SweatAlert } from 'src/app/services/sweat-alert.service';\n\n@Component({\n  selector: 'app-create-item',\n  templateUrl: './create-item.component.html',\n  styleUrls: ['./create-item.component.css'],\n})\nexport class CreateItemComponent implements OnInit {\n  createItem: FormGroup;\n  item: Product = new Product(\n    0,\n    '',\n    0,\n    '',\n    '',\n    '../../../assets/images/item1.jpg',\n    0\n  );\n  categories: { id: number; name: string }[];\n  isUpdateMode: boolean = false;\n  isChangesSaved: boolean = false;\n  sweatAlertService: SweatAlert = new SweatAlert();\n\n  constructor(\n    private router: ActivatedRoute,\n    private itemService: ItemService,\n    private categoryService: CategoryService,\n    private route: Router\n  ) {\n    this.router.params.subscribe((params: Params) => {\n      //CHECK IF THE ID HAS RIGHT ID\n      if (!isNaN(params['id'])) {\n        this.isUpdateMode = true;\n        this.item.id = params['id'];\n        this.itemService.GetItem(this.item.id).subscribe({\n          next: (result: SingleResult) => {\n            this.item = <Product>result.result;\n            console.log(result);\n          },\n          error: (error) => {\n            this.route.navigate(['/notfound'], { relativeTo: this.router });\n          },\n        });\n      }\n    });\n  }\n  ngOnInit() {\n    this.createItem = new FormGroup({\n      name: new FormControl(null, [Validators.required]),\n      price: new FormControl(null, [Validators.required]),\n      description: new FormControl(null),\n      image: new FormControl(null),\n      brand: new FormControl(null),\n      quantity: new FormControl(null, [Validators.required]),\n      category: new FormControl(null, [Validators.required, Validators.min(0)]),\n    });\n  }\n\n  onSubmit() {\n    if (!this.isUpdateMode) {\n      this.itemService.PostFormData(this.item).subscribe({\n        next: (response) => {\n          this.isChangesSaved = true;\n          this.sweatAlertService.successNotification();\n          this.route.navigate(['/items'], { relativeTo: this.router });\n        },\n        error: (err) => {\n          if (err.error.ErrorMessages[0] === 'Category Not Exists!') {\n            alert('please select category!');\n            console.clear();\n          }\n        },\n      });\n    } else {\n      this.itemService.PutFormData(this.item).subscribe({\n        next: (response) => {\n          this.isChangesSaved = true;\n          this.sweatAlertService.successNotification();\n          this.route.navigate(['/items'], { relativeTo: this.router });\n        },\n        error: (err: HttpErrorResponse) => {\n          if (err.error.ErrorMessages[0] === 'Category Not Exists!') {\n            alert('please select category!');\n            console.clear();\n          }\n        },\n      });\n    }\n  }\n\n  backToItems() {\n    this.route.navigate(['/items'], { relativeTo: this.router });\n  }\n\n  canDeactivate(): boolean | Promise<boolean> | Observable<boolean> {\n    return new Promise<boolean>((resolve) => {\n      if (!this.createItem.valid || !this.isChangesSaved) {\n        this.sweatAlertService.alertSkipEdit().then((isConfirmed) => {\n          resolve(isConfirmed);\n        });\n      } else {\n        resolve(true);\n      }\n    });\n  }\n}\n","<form\n  [formGroup]=\"createItem\"\n  enctype=\"multipart/form-data\"\n  class=\"needs-validation mt-5 mb-5\"\n  novalidate\n  (ngSubmit)=\"onSubmit()\"\n>\n  <br />\n  <div\n    class=\"container bg-light col-md-9 col-11 p-3\"\n    style=\"border-radius: 10px\"\n  >\n    <p\n      class=\"bg-light\"\n      style=\"font-size: 2rem; font-weight: bold; color: #104c74\"\n      *ngIf=\"!isUpdateMode\"\n    >\n      CREATE ITEM\n    </p>\n    <p\n      class=\"bg-light\"\n      style=\"font-size: 2rem; font-weight: bold; color: #104c74\"\n      *ngIf=\"isUpdateMode\"\n    >\n      UPDATE ITEM\n    </p>\n    <hr />\n\n    <div class=\"row\">\n      <input type=\"hidden\" name=\"search\" value=\"@search\" />\n      <input type=\"hidden\" name=\"pageNumber\" value=\"@pageNumber\" />\n\n      <div class=\"col-2\">\n        <label class=\"form-label pt-2\" style=\"font-size: 20px\">Name:</label>\n      </div>\n      <div class=\"col-10 pb-3\">\n        <input\n          [ngClass]=\"{\n            'is-valid':\n              createItem.get('name').valid &&\n              (createItem.get('name').dirty ||\n                createItem.get('name').touched ||\n                isUpdateMode),\n            'is-invalid':\n              createItem.get('name').invalid &&\n              (createItem.get('name').dirty ||\n                createItem.get('name').touched ||\n                isUpdateMode)\n          }\"\n          formControlName=\"name\"\n          class=\"form-control\"\n          [(ngModel)]=\"item.name\"\n          placeholder=\"Enter item name..\"\n        />\n        <span\n          *ngIf=\"\n            !createItem.get('name').valid && createItem.get('name').touched\n          \"\n          class=\"text-danger\"\n          >Enter a valid Name!</span\n        >\n      </div>\n\n      <div class=\"col-2\">\n        <label class=\"form-label pt-2\" style=\"font-size: 20px\">Price:</label>\n      </div>\n      <div class=\"col-10 pb-3\">\n        <div class=\"col-3\">\n          <input\n            [ngClass]=\"{\n              'is-valid':\n                createItem.get('price').valid &&\n                (createItem.get('price').dirty ||\n                  createItem.get('price').touched ||\n                  isUpdateMode),\n              'is-invalid':\n                createItem.get('price').invalid &&\n                (createItem.get('price').dirty ||\n                  createItem.get('price').touched ||\n                  isUpdateMode)\n            }\"\n            formControlName=\"price\"\n            type=\"number\"\n            class=\"form-control\"\n            [(ngModel)]=\"item.price\"\n            placeholder=\"Add price..\"\n          />\n          <span\n            *ngIf=\"\n              !createItem.get('price').valid && createItem.get('price').touched\n            \"\n            class=\"text-danger\"\n            >Enter a valid Price!</span\n          >\n        </div>\n      </div>\n\n      <div class=\"col-2\">\n        <label class=\"control-label pt-2\" style=\"font-size: 20px\"\n          >Description:</label\n        >\n      </div>\n      <div class=\"col-10 pb-3\">\n        <textarea\n          [ngClass]=\"{\n            'is-valid':\n              createItem.get('description').valid &&\n              (createItem.get('description').dirty ||\n                createItem.get('description').touched ||\n                isUpdateMode),\n            'is-invalid':\n              createItem.get('description').invalid &&\n              (createItem.get('description').dirty ||\n                createItem.get('description').touched ||\n                isUpdateMode)\n          }\"\n          formControlName=\"description\"\n          class=\"form-control\"\n          rows=\"5\"\n          [(ngModel)]=\"item.description\"\n          placeholder=\"Enter description..\"\n        ></textarea>\n        <span class=\"text-danger\"></span>\n      </div>\n\n      <div class=\"col-2\">\n        <label class=\"control-label pt-2\" style=\"font-size: 20px\">Image:</label>\n      </div>\n      <div class=\"col-10 pb-3\">\n        <input\n          [ngClass]=\"{\n            'is-valid':\n              createItem.get('image').valid &&\n              (createItem.get('image').dirty ||\n                createItem.get('image').touched ||\n                isUpdateMode),\n            'is-invalid':\n              createItem.get('image').invalid &&\n              (createItem.get('image').dirty ||\n                createItem.get('image').touched ||\n                isUpdateMode)\n          }\"\n          formControlName=\"image\"\n          class=\"form-control\"\n          type=\"file\"\n          id=\"formFile\"\n          pattern=\".*\\.(jpg|jpeg|png|img)$\"\n          placeholder=\"Choose item image..\"\n        />\n        <span\n          *ngIf=\"\n            !createItem.get('image').valid && createItem.get('image').touched\n          \"\n          class=\"text-danger\"\n          >Enter a valid Image!</span\n        >\n      </div>\n\n      <div class=\"col-2\">\n        <label class=\"control-label pt-2\" style=\"font-size: 20px\">Brand:</label>\n      </div>\n      <div class=\"col-10 pb-3\">\n        <input\n          [ngClass]=\"{\n            'is-valid':\n              createItem.get('brand').valid &&\n              (createItem.get('brand').dirty ||\n                createItem.get('brand').touched ||\n                isUpdateMode),\n            'is-invalid':\n              createItem.get('brand').invalid &&\n              (createItem.get('brand').dirty ||\n                createItem.get('brand').touched ||\n                isUpdateMode)\n          }\"\n          formControlName=\"brand\"\n          class=\"form-control\"\n          [(ngModel)]=\"item.brandName\"\n          placeholder=\"Enter item brand..\"\n        />\n        <span class=\"text-danger\"></span>\n      </div>\n\n      <div class=\"col-2\">\n        <label class=\"control-label pt-2\" style=\"font-size: 20px\"\n          >Quantity:</label\n        >\n      </div>\n      <div class=\"col-10 pb-3\">\n        <div class=\"col-3\">\n          <input\n            [ngClass]=\"{\n              'is-valid':\n                createItem.get('quantity').valid &&\n                (createItem.get('quantity').dirty ||\n                  createItem.get('quantity').touched ||\n                  isUpdateMode),\n              'is-invalid':\n                createItem.get('quantity').invalid &&\n                (createItem.get('quantity').dirty ||\n                  createItem.get('quantity').touched ||\n                  isUpdateMode)\n            }\"\n            formControlName=\"quantity\"\n            type=\"number\"\n            class=\"form-control\"\n            [(ngModel)]=\"item.quantity\"\n            placeholder=\"Add quantity..\"\n          />\n          <span\n            *ngIf=\"\n              !createItem.get('quantity').valid &&\n              createItem.get('quantity').touched\n            \"\n            class=\"text-danger\"\n            >Enter a valid Quantity!</span\n          >\n        </div>\n      </div>\n\n      <div class=\"col-2 mb-5\">\n        <label class=\"control-label pt-2\" style=\"font-size: 20px\"\n          >Category:</label\n        >\n      </div>\n      <div class=\"col-4 mb-5\">\n        <select\n          [ngClass]=\"{\n            'is-valid': createItem.get('category').valid,\n            'is-invalid': createItem.get('category').invalid\n          }\"\n          formControlName=\"category\"\n          class=\"form-select\"\n          aria-label=\"Select Category\"\n          [(ngModel)]=\"item.categoryId\"\n          (change)=\"updateCategoryId($event.target.value)\"\n        >\n          <option disabled [value]=\"0\">Select a Category</option>\n          <option *ngFor=\"let cat of categories\" [value]=\"cat.id\">\n            {{ cat.name }}\n          </option>\n        </select>\n        <span\n          *ngIf=\"\n            !createItem.get('category').valid &&\n            createItem.get('category').touched\n          \"\n          class=\"text-danger\"\n          >Enter a valid Category!</span\n        >\n      </div>\n\n      <div class=\"col-12 d-flex justify-content-around\">\n        <div class=\"col-5\">\n          <a class=\"btn-primary btn form-control\" (click)=\"backToItems()\"\n            >Back to Items</a\n          >\n        </div>\n        <div class=\"col-5\">\n          <input\n            [disabled]=\"!createItem.valid\"\n            type=\"submit\"\n            id=\"submit\"\n            value=\"Confirm\"\n            class=\"btn btn-success form-control\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}